<?php

use Drupal\metadata_hex\Service\MetadataBatchProcessor;
use Drupal\Core\Entity\EntityInterface;
use Drupal\metadata_hex\Service\MetadataExtractor;

/**
 * Implements hook_node_insert().
 *
 * Processes newly inserted nodes if they match the configured node types.
 */
function metadata_hex_node_insert(EntityInterface $node) {
  // Ensure the entity is a node.
  if ($node->getEntityTypeId() !== 'node') {
    return;
  }

  // Load the configuration settings.
  $settingsManager = new \Drupal\metadata_hex\Service\SettingsManager();
  $allowed_types = $settingsManager->getAllowedNodeTypes();
  // $config = \Drupal::config('metadata_hex.settings');
  // $allowed_types = $config->get('extraction_settings.hook_node_types') ?? [];

  // Check if the node's bundle type is in the allowed types.
  if (in_array($node->bundle(), $allowed_types, true)) {
    // Process the node using MetadataBatchProcessor. 

    $node = \Drupal\node\Entity\Node::load('1');
    $mdex = new Drupal\metadata_hex\Service\MetadataExtractor(\Drupal::service('logger.channel.default'));
    $mdbp = new Drupal\metadata_hex\Service\MetadataBatchProcessor(\Drupal::service('logger.channel.default'), $mdex);
    $mdbp->processNode($node->id());
  }
}